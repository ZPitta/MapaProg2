# üìò Projeto: Sistema de Cadastro e Login de Usu√°rios (Java + MySQL)

Atividade desenvolvida em linguagem **Java**, utilizando **orienta√ß√£o a objetos**, com foco nos conceitos de **heran√ßa**, **encapsulamento** e **persist√™ncia de dados**.

Atividade feita com o objetivo de **praticar desenvolvimento de interfaces gr√°ficas (Swing)** e **integra√ß√£o com banco de dados** atrav√©s de **DAO (Data Access Object)** e **JDBC**.

---

## üß© Resumo da atividade

O programa cria uma interface interativa com o usu√°rio, permitindo o **cadastro e autentica√ß√£o de usu√°rios**.  
A aplica√ß√£o valida as entradas, realiza o **armazenamento dos dados em um banco de dados MySQL**, e possibilita o **login com verifica√ß√£o de credenciais**.

---

## üíª Estrutura do projeto

**Pacotes principais:**
- `Principal.views` ‚Üí Cont√©m as telas gr√°ficas (`MenuInicial` e `TelaCadastro`);
- `Principal.core.entity` ‚Üí Define as classes de modelo (ex: `Usuario`);
- `Principal.core.dao` ‚Üí Gerencia as opera√ß√µes de persist√™ncia (ex: `UsuarioDAO`);
- `Principal.core.connection` ‚Üí Configura a conex√£o com o banco de dados MySQL.

**Telas do sistema:**
- `MenuInicial` ‚Üí Tela principal de login e acesso ao cadastro;
- `TelaCadastro` ‚Üí Tela para cria√ß√£o de novos usu√°rios.

---

## ‚öôÔ∏è Funcionalidades

- Cadastro de novos usu√°rios com:
  - Nome
  - Login
  - Senha
  - E-mail  
- Valida√ß√£o de campos obrigat√≥rios;
- Login de usu√°rios com autentica√ß√£o no banco de dados;
- Mensagens de erro e sucesso via `JOptionPane`;
- Interface desenvolvida com **Java Swing (NetBeans Form Designer)**;
- Estrutura modular, aplicando **boas pr√°ticas de encapsulamento e separa√ß√£o de responsabilidades**.

---

## üóÑÔ∏è Tecnologias utilizadas

- **Java SE**  
- **JDBC (Java Database Connectivity)**  
- **MySQL**  
- **Swing / NetBeans GUI Builder**  

---

## üß† Conceitos aplicados

- Encapsulamento das propriedades das classes de entidade (`Usuario`);
- Heran√ßa e reutiliza√ß√£o de c√≥digo em componentes visuais;
- Padr√£o **DAO** para manipula√ß√£o de dados;
- Estrutura MVC simplificada (camadas de *View*, *Entity* e *DAO*);
- Conex√£o e manipula√ß√£o de banco relacional via **SQL**.

---

## üöÄ Execu√ß√£o

1. Configure o banco de dados MySQL com a tabela `usuarios` (colunas: nome, login, senha, email).  
2. Atualize as credenciais de conex√£o no arquivo de configura√ß√£o (caso exista `ConnectionFactory` ou similar).  
3. Execute o projeto em um ambiente Java compat√≠vel (ex: NetBeans, IntelliJ, Eclipse).  
4. Inicie pela classe **`MenuInicial.java`**.  

---

## ‚úçÔ∏è Autor

Desenvolvido por **Jo√£o Pitta**, como atividade pr√°tica de aprendizado em **Java Orientado a Objetos** e **Integra√ß√£o com Banco de Dados**.
